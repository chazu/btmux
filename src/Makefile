# Makefile.in generated by automake 1.10.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/battletech-mux
pkglibdir = $(libdir)/battletech-mux
pkgincludedir = $(includedir)/battletech-mux
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = netmux$(EXEEXT) mkindx$(EXEEXT)
am__append_1 = logcache.c
#am__append_2 = sqlchild.c
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/autoconf.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_mkindx_OBJECTS = mkindx.$(OBJEXT)
mkindx_OBJECTS = $(am_mkindx_OBJECTS)
mkindx_LDADD = $(LDADD)
am__netmux_SOURCES_DIST = dummy.cc ../misc/myfifo.c ../event/event.c \
	boolexp.c bsd.c commac.c command.c compat.c comsys.c conf.c \
	cque.c create.c db.c db_xml.c db_xdr.c db_rw.c dllist.c \
	dnschild.c eval.c file_c.c flags.c funceval.c functions.c \
	game.c help.c log.c look.c macro.c mail.c match.c mguests.c \
	move.c mmdb.c nametab.c netcommon.c nrbtab.c object.c player.c \
	player_c.c powers.c predicates.c python.c rbtree.c rbtab.c \
	rob.c set.c signal.c speech.c stringutil.c timer.c unparse.c \
	vattr.c walkdb.c wild.c wiz.c version.c logcache.c sqlchild.c
am__objects_1 = logcache.$(OBJEXT)
#am__objects_2 = sqlchild.$(OBJEXT)
am_netmux_OBJECTS = dummy.$(OBJEXT) myfifo.$(OBJEXT) event.$(OBJEXT) \
	boolexp.$(OBJEXT) bsd.$(OBJEXT) commac.$(OBJEXT) \
	command.$(OBJEXT) compat.$(OBJEXT) comsys.$(OBJEXT) \
	conf.$(OBJEXT) cque.$(OBJEXT) create.$(OBJEXT) db.$(OBJEXT) \
	db_xml.$(OBJEXT) db_xdr.$(OBJEXT) db_rw.$(OBJEXT) \
	dllist.$(OBJEXT) dnschild.$(OBJEXT) eval.$(OBJEXT) \
	file_c.$(OBJEXT) flags.$(OBJEXT) funceval.$(OBJEXT) \
	functions.$(OBJEXT) game.$(OBJEXT) help.$(OBJEXT) \
	log.$(OBJEXT) look.$(OBJEXT) macro.$(OBJEXT) mail.$(OBJEXT) \
	match.$(OBJEXT) mguests.$(OBJEXT) move.$(OBJEXT) \
	mmdb.$(OBJEXT) nametab.$(OBJEXT) netcommon.$(OBJEXT) \
	nrbtab.$(OBJEXT) object.$(OBJEXT) player.$(OBJEXT) \
	player_c.$(OBJEXT) powers.$(OBJEXT) predicates.$(OBJEXT) \
	python.$(OBJEXT) rbtree.$(OBJEXT) rbtab.$(OBJEXT) \
	rob.$(OBJEXT) set.$(OBJEXT) signal.$(OBJEXT) speech.$(OBJEXT) \
	stringutil.$(OBJEXT) timer.$(OBJEXT) unparse.$(OBJEXT) \
	vattr.$(OBJEXT) walkdb.$(OBJEXT) wild.$(OBJEXT) wiz.$(OBJEXT) \
	version.$(OBJEXT) $(am__objects_1) $(am__objects_2)
netmux_OBJECTS = $(am_netmux_OBJECTS)
netmux_DEPENDENCIES = ../btech/src/libbtech.la
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/confutil/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(mkindx_SOURCES) $(netmux_SOURCES)
DIST_SOURCES = $(mkindx_SOURCES) $(am__netmux_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/chazu/c/btmux/confutil/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/chazu/c/btmux/confutil/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/chazu/c/btmux/confutil/missing --run autoconf
AUTOHEADER = ${SHELL} /home/chazu/c/btmux/confutil/missing --run autoheader
AUTOMAKE = ${SHELL} /home/chazu/c/btmux/confutil/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = 
FFLAGS = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -levent -lnsl -lm -lcrypt -lbsd 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/chazu/c/btmux/confutil/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NMEDIT = 
OBJEXT = o
PACKAGE = battletech-mux
PACKAGE_BUGREPORT = 
PACKAGE_NAME = BattleTech MUX
PACKAGE_STRING = BattleTech MUX 0.7
PACKAGE_TARNAME = battletech-mux
PACKAGE_VERSION = 0.7
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 0.7
abs_builddir = /home/chazu/c/btmux/src
abs_srcdir = /home/chazu/c/btmux/src
abs_top_builddir = /home/chazu/c/btmux
abs_top_srcdir = /home/chazu/c/btmux
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/chazu/c/btmux/confutil/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/chazu/c/btmux/game.run
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  btech
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

# FIXME: We should eliminate the need to include btech/src/btech somehow.
AM_CPPFLAGS = -I$(top_srcdir)/include \
	-I$(top_srcdir)/btech/src/include -I$(top_srcdir)/btech/src/btech


# TODO: Need to list all the headers for the dist target.
netmux_SOURCES = dummy.cc ../misc/myfifo.c ../event/event.c boolexp.c \
	bsd.c commac.c command.c compat.c comsys.c conf.c cque.c \
	create.c db.c db_xml.c db_xdr.c db_rw.c dllist.c dnschild.c \
	eval.c file_c.c flags.c funceval.c functions.c game.c help.c \
	log.c look.c macro.c mail.c match.c mguests.c move.c mmdb.c \
	nametab.c netcommon.c nrbtab.c object.c player.c player_c.c \
	powers.c predicates.c python.c rbtree.c rbtab.c rob.c set.c \
	signal.c speech.c stringutil.c timer.c unparse.c vattr.c \
	walkdb.c wild.c wiz.c $(netmux_OPTIONAL) version.c \
	$(am__append_1) $(am__append_2)
netmux_LDADD = ../btech/src/libbtech.la

# TODO: Need to list all the headers for the dist target.
mkindx_SOURCES = mkindx.c

# Support for autogenerating version.h.
BUILT_SOURCES = version.h
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
mkindx$(EXEEXT): $(mkindx_OBJECTS) $(mkindx_DEPENDENCIES) 
	@rm -f mkindx$(EXEEXT)
	$(LINK) $(mkindx_OBJECTS) $(mkindx_LDADD) $(LIBS)
netmux$(EXEEXT): $(netmux_OBJECTS) $(netmux_DEPENDENCIES) 
	@rm -f netmux$(EXEEXT)
	$(CXXLINK) $(netmux_OBJECTS) $(netmux_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/boolexp.Po
include ./$(DEPDIR)/bsd.Po
include ./$(DEPDIR)/commac.Po
include ./$(DEPDIR)/command.Po
include ./$(DEPDIR)/compat.Po
include ./$(DEPDIR)/comsys.Po
include ./$(DEPDIR)/conf.Po
include ./$(DEPDIR)/cque.Po
include ./$(DEPDIR)/create.Po
include ./$(DEPDIR)/db.Po
include ./$(DEPDIR)/db_rw.Po
include ./$(DEPDIR)/db_xdr.Po
include ./$(DEPDIR)/db_xml.Po
include ./$(DEPDIR)/dllist.Po
include ./$(DEPDIR)/dnschild.Po
include ./$(DEPDIR)/dummy.Po
include ./$(DEPDIR)/eval.Po
include ./$(DEPDIR)/event.Po
include ./$(DEPDIR)/file_c.Po
include ./$(DEPDIR)/flags.Po
include ./$(DEPDIR)/funceval.Po
include ./$(DEPDIR)/functions.Po
include ./$(DEPDIR)/game.Po
include ./$(DEPDIR)/help.Po
include ./$(DEPDIR)/log.Po
include ./$(DEPDIR)/logcache.Po
include ./$(DEPDIR)/look.Po
include ./$(DEPDIR)/macro.Po
include ./$(DEPDIR)/mail.Po
include ./$(DEPDIR)/match.Po
include ./$(DEPDIR)/mguests.Po
include ./$(DEPDIR)/mkindx.Po
include ./$(DEPDIR)/mmdb.Po
include ./$(DEPDIR)/move.Po
include ./$(DEPDIR)/myfifo.Po
include ./$(DEPDIR)/nametab.Po
include ./$(DEPDIR)/netcommon.Po
include ./$(DEPDIR)/nrbtab.Po
include ./$(DEPDIR)/object.Po
include ./$(DEPDIR)/player.Po
include ./$(DEPDIR)/player_c.Po
include ./$(DEPDIR)/powers.Po
include ./$(DEPDIR)/predicates.Po
include ./$(DEPDIR)/python.Po
include ./$(DEPDIR)/rbtab.Po
include ./$(DEPDIR)/rbtree.Po
include ./$(DEPDIR)/rob.Po
include ./$(DEPDIR)/set.Po
include ./$(DEPDIR)/signal.Po
include ./$(DEPDIR)/speech.Po
include ./$(DEPDIR)/sqlchild.Po
include ./$(DEPDIR)/stringutil.Po
include ./$(DEPDIR)/timer.Po
include ./$(DEPDIR)/unparse.Po
include ./$(DEPDIR)/vattr.Po
include ./$(DEPDIR)/version.Po
include ./$(DEPDIR)/walkdb.Po
include ./$(DEPDIR)/wild.Po
include ./$(DEPDIR)/wiz.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

myfifo.o: ../misc/myfifo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT myfifo.o -MD -MP -MF $(DEPDIR)/myfifo.Tpo -c -o myfifo.o `test -f '../misc/myfifo.c' || echo '$(srcdir)/'`../misc/myfifo.c
	mv -f $(DEPDIR)/myfifo.Tpo $(DEPDIR)/myfifo.Po
#	source='../misc/myfifo.c' object='myfifo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o myfifo.o `test -f '../misc/myfifo.c' || echo '$(srcdir)/'`../misc/myfifo.c

myfifo.obj: ../misc/myfifo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT myfifo.obj -MD -MP -MF $(DEPDIR)/myfifo.Tpo -c -o myfifo.obj `if test -f '../misc/myfifo.c'; then $(CYGPATH_W) '../misc/myfifo.c'; else $(CYGPATH_W) '$(srcdir)/../misc/myfifo.c'; fi`
	mv -f $(DEPDIR)/myfifo.Tpo $(DEPDIR)/myfifo.Po
#	source='../misc/myfifo.c' object='myfifo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o myfifo.obj `if test -f '../misc/myfifo.c'; then $(CYGPATH_W) '../misc/myfifo.c'; else $(CYGPATH_W) '$(srcdir)/../misc/myfifo.c'; fi`

event.o: ../event/event.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT event.o -MD -MP -MF $(DEPDIR)/event.Tpo -c -o event.o `test -f '../event/event.c' || echo '$(srcdir)/'`../event/event.c
	mv -f $(DEPDIR)/event.Tpo $(DEPDIR)/event.Po
#	source='../event/event.c' object='event.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o event.o `test -f '../event/event.c' || echo '$(srcdir)/'`../event/event.c

event.obj: ../event/event.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT event.obj -MD -MP -MF $(DEPDIR)/event.Tpo -c -o event.obj `if test -f '../event/event.c'; then $(CYGPATH_W) '../event/event.c'; else $(CYGPATH_W) '$(srcdir)/../event/event.c'; fi`
	mv -f $(DEPDIR)/event.Tpo $(DEPDIR)/event.Po
#	source='../event/event.c' object='event.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o event.obj `if test -f '../event/event.c'; then $(CYGPATH_W) '../event/event.c'; else $(CYGPATH_W) '$(srcdir)/../event/event.c'; fi`

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-exec-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-exec-hook \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS


version.h:
	$(SHELL) $(srcdir)/version.sh

# XXX: A hack to ensure the version.h isn't present on our next build.  Build
# numbers will increment based on the number of times you install, rather than
# the number of times you compile.  This makes more sense to me, anyway.
#
# You can hook all or something if you want different behavior, or have
# version.h depend on a .PHONY target.
install-exec-hook:
	rm -f version.h

# TODO: Is this really used anyway? In any case, these should all be configure
# options/additional programs, as convenient as it is to simply be able to
# build/link to different targets.
#mudflap:
#	$(CC) -g3 -DDEBUG -DSVN_REVISION="\"`svnversion .`\"" $(ALLFLAGS) $(VERSION_FLAGS) -fmudflap -o src/netmux.mudflap $(ALLSRCS) src/version.c $(LIBS) -lmudflap

# TODO: I think we should just drop this target.
#dbconvert src/dbconvert:
#	@echo "dbconvert is no longer supported." && exit 1
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
